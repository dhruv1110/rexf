name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Fast unit tests and quality checks
  quality-and-unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Code quality checks
      run: |
        black --check rexf tests examples
        isort --check-only rexf tests examples
        flake8 rexf tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 rexf tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Type checking (non-blocking)
      continue-on-error: true
      run: mypy rexf --ignore-missing-imports --disable-error-code=attr-defined,no-untyped-def,var-annotated,assignment,arg-type,no-any-return,index,misc,truthy-function,operator,import-untyped

    - name: Unit tests
      run: pytest -m "unit" --tb=short --durations=10

  # Cross-platform core testing
  test-core:
    needs: quality-and-unit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.11"
          - os: windows-latest
            python-version: "3.11"
          - os: macos-latest
            python-version: "3.11"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Core functionality tests
      run: pytest -m "not slow and not integration" --tb=short

  # Python version compatibility (Ubuntu only)
  test-versions:
    needs: quality-and-unit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Core tests
      run: pytest -m "not slow and not integration" --tb=short

  # Full test suite with coverage
  test-full:
    needs: [test-core, test-versions]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Full test suite with coverage
      run: pytest --cov=rexf --cov-report=xml --cov-report=term-missing

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # Security and build checks
  security-build:
    needs: quality-and-unit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"
        pip install build safety bandit

    - name: Security checks (non-blocking)
      continue-on-error: true
      run: |
        safety check --ignore=70612 || true
        bandit -r rexf -f json -o bandit-report.json || true

    - name: Build package
      run: python -m build

    - name: Check build
      run: |
        pip install dist/*.whl
        python -c "import rexf; print(f'RexF version: {rexf.__version__}')"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 7